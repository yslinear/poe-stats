name: Laravel

on:
  push:
    branches: [ master, chore-github-actions ]
  pull_request:
    branches: [ master ]

jobs:
  # laravel-tests:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Copy .env
  #     run: php -r "file_exists('.env') || copy('.env.example', '.env');"
  #   - name: Install Dependencies
  #     run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
  #   - name: Generate key
  #     run: php artisan key:generate
  #   - name: Directory Permissions
  #     run: chmod -R 777 storage bootstrap/cache
  #   - name: Create Database
  #     run: |
  #       mkdir -p database
  #       touch database/database.sqlite
  #   - name: Execute tests (Unit and Feature tests) via PHPUnit
  #     env:
  #       DB_CONNECTION: sqlite
  #       DB_DATABASE: database/database.sqlite
  #     run: vendor/bin/phpunit

  # deploy-lionfree:
  #   needs: laravel-tests

  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Get latest code
  #     uses: actions/checkout@v2

  #   - name: Install Node.js dependencies and minifies JS/CSS files
  #     run: npm install && npm run prod

  #   - name: Sync files
  #     uses: SamKirkland/FTP-Deploy-Action@4.0.0
  #     with:
  #       server: ${{ secrets.SERVER }}
  #       username: ${{ secrets.USERNAME }}
  #       password: ${{ secrets.PASSWORD }}
  #       server-dir: ${{ secrets.SERVER_DIR }}
  #       exclude: .git*
  #         - .git*/**
  #         -  **/.git*/**
  #         - node_modules/**
  #         - node_modules/**/*
  #         - README.md
  #         - phpunit.xml
  #         - composer*.json
  #         - package*.json

  deploy-aws-elastic-beanstalk:
    # needs: laravel-tests

    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v1

    - name: Generate deployment package
      run: zip -r ${{ github.SHA }}.zip . -x "*.git*"

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v16
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: poe-stats
        environment_name: Poestats-env
        use_existing_version_if_available: true
        version_label: 1.0.0
        region: ap-northeast-1
        deployment_package: ${{ github.SHA }}.zip
